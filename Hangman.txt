package eg.edu.alexu.csd.datastructure.hangman.cs08;

import eg.edu.alexu.csd.datastructure.hangman.IceHockey;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.util.Random;

public class Hangman implements IceHockey {

	private String[] words = new String[1000];
	private String[] dic = new String[1000];
	public String secretword;
	private String dash;
	private int wronganswers=0;
	private int maxwrong;
	private int counter;
	
	//copy the dictionary into an array of strings
	public void setDictionary(String[] words) {
	
		this.words = words;
	}

	//select a random string from the array and check if it equals null
	public String selectRandomSecretWord() {
		
		Random index = new Random();
		
		secretword = words[index.nextInt(counter-1)];
		
		while(secretword == null){
			secretword = words[index.nextInt(counter-1)];
		}
		
		dash = secretword;
		
		return null;
	}

	//see if the user enters a right letter
	public String guess(Character c) {
		
		int flag= 0;
		
		for(int i=0;i<secretword.length();i++){
			if(secretword.charAt(i)==c || secretword.charAt(i)==Character.toLowerCase(c)){
				char[] dashcar = dash.toCharArray();
				dashcar[i]=c;
				dash = String.valueOf(dashcar);
				flag=1;
			}
		}
		if(flag==1){
			return dash;
		}else{
			return null;
		}
	}

	// set max wrong answers to 5 
	public void setMaxWrongGuesses(Integer max) {
		
		this.maxwrong=max;	
	}
	
	//creat seen dashed word
	public void dashingword(){
		
		char[] dashing = dash.toCharArray();
		
		for(int i=0;i<secretword.length();i++){
			dashing[i]='_';
		}
		
		dash = String.valueOf(dashing);
	}
	
	//print seen word
	public void printdashed(){
		
		char[] dashedarr = dash.toCharArray();
		
		for(int i=0;i<dash.length();i++){
			System.out.print(dashedarr[i]+" ");
		}
		System.out.println("");
	}
	
	//incremets number of wrong answers by 1 
	public int wrong(){
		
		wronganswers++;
		
		return wronganswers;
	}
	
	//check case of win 
	public Boolean check(){
		
		for(int i =0;i<secretword.length();i++){
			if(dash.charAt(i)=='_'){
				return true;
			}
		}
		
		return false ;
	}
	
	//readfrom file 
	public String[] readfromfile() throws IOException{
		
		int bufferSize = 8 * 1024;

		BufferedReader bufferedReader = new BufferedReader(
		                      new FileReader("Dictionary.txt"),
		                      bufferSize);
		
		String line = bufferedReader.readLine();
		
		counter=0;
		
	    while(line != null) {
	        dic[counter]=line.toLowerCase();
	        counter++;
	        line = bufferedReader.readLine();
	}
	    
	    return dic;
}
}
